# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

rest {
  request-timeout = 30s
}

domain {
  device-data-processor {
    enabled = true
    initial-sample-interval-ms = 1000
    initial-push-interval-ms = 5000
  }
}

drone-tracker {
  pipelines {
    enrichment {
      num-orgs = 20
      broadcast-parallelism = 2

      data-submit-timeout = 5s
      parallelism = 9
      buffer-size = 500

      restart {
        backoff-min = 5s
        backoff-max = 30s
        random-factor = 0.2
      }
    }

    summarize-by-org {
      data-submit-timeout = 5s
      parallelism = 9
      buffer-size = 500
      max-org-cities = 50000

      aggregation-window {
        window = 60s
        slide = 10s
      }
    }

    summarize-by-city {
      data-submit-timeout = 5s
      parallelism = 9
      buffer-size = 500
      max-cities = 10000

      aggregation-window {
        window = 60s
        slide = 10s
      }
    }
  }
}

play {
    modules {
      enabled += "modules.DomainModule"
    }

  akka {
    actor-system = "DroneTracker"
    run-cs-from-phase = "service-stop"

    // force dev mode server to use local provider
    dev-mode.akka.actor.provider = "akka.actor.LocalActorRefProvider"
  }
}


akka {
  loglevel = DEBUG
  loggers = [akka.event.slf4j.Slf4jLogger]

  actor {
    debug {
      lifecycle = on
      unhandled = on
    }

    provider = cluster

//    deployment {
//      /parent/router1 {
//        router = round-robin-pool
//        nr-of-instances = 5
//      }
//    }
  }

  cluster {
    enable-cluster-bootstrap = false

    sharding.least-shard-allocation-strategy {
      rebalance-threshold = 3
    }
  }

  http {
    client {
      connecting-timeout = 10 s
    }

    host-connection-pool {
      max-connections = 40
      max-open-requests = 256
    }
  }

  management {
    http {
      port = 8558
      bind-hostname = "0.0.0.0"
    }
  }

  remote {
    netty.tcp {
      port = 2552
    }
  }

  io.dns.resolver = async-dns
}

cinnamon {
  // Play -------------------------------------------------------------------
  play {
    http {
      servers {
        "*:*" {
          paths {
            "*" {
              metrics = on
            }
          }
        }
      }

      clients {
        "*:*" {
          paths {
            "*" {
              metrics = on
            }
          }
        }
      }
    }
  }

  // Akka -------------------------------------------------------------------
  akka {
    actors {
      "/user/*" {
        report-by = class
      }
      "/system/sharding/dronesim.Drone/*" {
        report-by = class
      }
      "/system/sharding/domain.DataEnrichmentWorker/*" {
        report-by = class
      }
      "/system/sharding/domain.SummarizeCityTemperatureWorker/*" {
        report-by = class
      }
      "/system/sharding/domain.SummarizeDronesWorker/*" {
        report-by = class
      }
    }

    http {
      servers {
        "*:*" {
          paths {
            "*" {
              metrics = on
            }
          }
        }
      }

      clients {
        "*:*" {
          paths {
            "*" {
              metrics = on
            }
          }
        }
      }
    }

    cluster {
      node-metrics = on
      shard-region-info = on
    }

    streams {
      "domain.DataEnrichmentWorker.*" {
        report-by = name
        flows = on
      }
      "domain.SummarizeCityTemperatureWorker.*" {
        report-by = name
        flows = on
      }
      "domain.SummarizeDronesWorker.*" {
        report-by = name
        flows = on
      }
    }
  }

  // Prometheus -------------------------------------------------------------------
  prometheus {
    exporters += http-server
    http-server {
      host = "0.0.0.0"
      port = 9001
    }
  }
}
